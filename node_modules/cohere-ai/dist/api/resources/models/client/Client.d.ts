/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Cohere from "../../..";
export declare namespace Models {
    interface Options {
        environment?: core.Supplier<environments.CohereEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        clientName?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Models {
    protected readonly _options: Models.Options;
    constructor(_options?: Models.Options);
    /**
     * Returns a list of models available for use. The list contains models from Cohere as well as your fine-tuned models.
     * @throws {@link Cohere.TooManyRequestsError}
     *
     * @example
     *     await cohere.models.list()
     */
    list(request?: Cohere.ModelsListRequest, requestOptions?: Models.RequestOptions): Promise<Cohere.ListModelsResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
